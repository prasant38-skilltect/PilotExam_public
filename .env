


# ATPL Exam Platform - Environment Configuration
# Copy this file to .env and fill in your actual values

# ===== DATABASE CONFIGURATION =====
# PostgreSQL connection string for your local database
# Format: postgresql://username:password@host:port/database_name
# DATABASE_URL='postgresql://neondb_owner:npg_w0sUblIomhA6@ep-proud-frog-adx6aw1k-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require'

DATABASE_URL='postgresql://neondb_owner:npg_mVYr4qv7ebWO@ep-fragrant-resonance-ad9crvtw-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require'

# Individual PostgreSQL connection parameters
# PGHOST=localhost
# PGPORT=5432
# PGUSER=your_username
# PGPASSWORD=your_password
# PGDATABASE=eatpl_db

# ===== APPLICATION CONFIGURATION =====
NODE_ENV=development
PORT=5000

# ===== SESSION CONFIGURATION =====
# Generate a secure random string (32+ characters) for session encryption
# You can use: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
SESSION_SECRET=generate_a_secure_random_string_here_at_least_32_characters_long

# ===== AUTHENTICATION CONFIGURATION =====
# Uncomment these if you want to re-enable Replit authentication
REPLIT_DOMAINS=localhost:5000
ISSUER_URL=https://replit.com/oidc
REPL_ID=mpurohit88

# ===== DEVELOPMENT SETTINGS =====
DEBUG=true

# ===== EMAIL CONFIGURATION =====
# For future forgot password functionality
# EMAIL_SERVICE=gmail
# EMAIL_USER=your_email@gmail.com
# EMAIL_PASSWORD=your_app_specific_password

# ===== JWT CONFIGURATION =====
# For custom authentication system
# JWT_SECRET=your_jwt_secret_key_min_32_characters
# JWT_EXPIRES_IN=7d

# ===== EXTERNAL API KEYS =====
# Google OAuth (for Google Sign In)
# GOOGLE_CLIENT_ID=your_google_oauth_client_id
# GOOGLE_CLIENT_SECRET=your_google_oauth_client_secret

# ===== SETUP INSTRUCTIONS =====
# 1. Copy this file: cp .env.example .env
# 2. Install PostgreSQL locally or use a cloud service
# 3. Create a database named 'eatpl_db'
# 4. Update DATABASE_URL with your actual database credentials
# 5. Generate a secure SESSION_SECRET
# 6. Run: npm install
# 7. Run: npm run db:push (to create database tables)
# 8. Run: npm run dev (to start the development server)